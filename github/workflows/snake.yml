name: GitHub Contribution Snake

on:
  schedule:
    - cron: "*/5 * * * *" # каждые 5 минут
  workflow_dispatch:

jobs:
  snake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install pillow svgwrite

      - name: Generate SVG Snake
        run: |
          python - <<'EOF'
          import svgwrite

          name = "MAXIM"
          block_size = 15
          spacing = 2
          colors = ["#ebedf0", "#9be9a8", "#40c463", "#30a14e", "#216e39"]

          # Простое отображение букв в сетке 5x5
          font_map = {
              "A": [[0,1,0],[1,0,1],[1,1,1],[1,0,1],[1,0,1]],
              "I": [[1,1,1],[0,1,0],[0,1,0],[0,1,0],[1,1,1]],
              "M": [[1,0,1],[1,1,1],[1,0,1],[1,0,1],[1,0,1]],
              "X": [[1,0,1],[0,1,0],[0,1,0],[0,1,0],[1,0,1]],
          }

          dwg = svgwrite.Drawing('snake.svg', profile='tiny')
          x_offset = 0

          for letter in name:
              pattern = font_map.get(letter.upper(), [[0]*3]*5)
              for y, row in enumerate(pattern):
                  for x, val in enumerate(row):
                      if val:
                          dwg.add(dwg.rect(
                              insert=(x_offset + x*(block_size+spacing), y*(block_size+spacing)),
                              size=(block_size, block_size),
                              fill=colors[-1]
                          ))
              x_offset += len(pattern[0])*(block_size+spacing) + spacing

          dwg.save()
          EOF

      - name: Commit and push
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git add snake.svg
          git commit -m "Update snake SVG"
          git push
